version: '3.7'

services:
  database:
    image: artping-db
    build:
      context: docker/postgres
      dockerfile: Dockerfile
    container_name: artping-db
    hostname: artping-db
    restart: "always"
    environment:
      - POSTGRES_USER=art
      - POSTGRES_PASSWORD=art
      - POSTGRES_DB=art_ping_db
    expose:
      - 5432
    ports:
      - 5432:5432
    volumes:
      - /volumes/v2_clear:/var/lib/postgresql/data
    networks:
      - net

  backend:
    build:
      context: docker/backend
      dockerfile: Dockerfile
    container_name: artping-backend
    hostname: artping-backend
    expose:
      - 8000
#      - 8001
    ports:
      - 8000:8000
#      - 8001:8001
    restart: "always"
    env_file:
      - docker/backend/app-variables.env
    depends_on:
      - database
    networks:
      - net
    entrypoint: [ "java",
#                  "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:8001",
                  "-jar","/app/artping2.jar" ]

  minio:
    image: minio/minio:latest
    command: server --console-address ":9001" /data/
    container_name: artping-minio
    hostname: artping-minio
    restart: unless-stopped
    ports:
      - 9000:9000
      - 9001:9001
    volumes:
      - /volumes/minio:/data
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    networks:
      - net

  prometheus:
    image: artping-prometheus
    build:
      context: docker/prometheus
      dockerfile: Dockerfile
    container_name: artping-prometheus
    hostname: artping-prometheus
    restart: unless-stopped
    ports:
      - 9090:9090
    volumes:
      - /volumes/prometheus:/prometheus
    depends_on:
      - backend
    networks:
      - net

  grafana:
    image: artping-grafana
    build:
      context: docker/grafana
      dockerfile: Dockerfile
    container_name: artping-grafana
    hostname: artping-grafana
    restart: unless-stopped
    ports:
      - 3000:3000
    volumes:
      - /volumes/grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - backend
      - prometheus
    networks:
      - net

  frontend:
    hostname: frontend
    image: art-frontend
    build:
      context: frontend
      dockerfile: ../docker/frontend/Dockerfile
    container_name: frontend
    restart: on-failure
    depends_on:
      - backend
    expose:
      - 8091
      - 8006
    ports:
      - 8091:8006
    command: [ "nginx", "-g", "daemon off;" ]
    volumes:
      - ./frontend/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - net
networks:
  net:
    internal: false
    driver: bridge
    name: art-network